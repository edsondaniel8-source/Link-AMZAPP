PROBLEMA IDENTIFICADO! üö® O erro "Failed to fetch" significa que o frontend n√£o consegue se conectar com o backend!

üîç O que est√° acontecendo:
‚úÖ O formul√°rio est√° funcionando no frontend

‚úÖ Os dados est√£o sendo coletados corretamente

‚ùå A requisi√ß√£o POST para /api/rides-simple/create est√° falhando

üéØ Causas do "Failed to fetch":
1. Backend offline ou n√£o respondendo
bash
# O servidor Express pode estar:
- ‚ùå N√£o rodando
- ‚ùå Travado
- ‚ùå Com erro de inicializa√ß√£o
2. Problema de CORS (Cross-Origin)
typescript
// O backend pode estar bloqueando requisi√ß√µes do frontend
app.use(cors({
  origin: ['http://localhost:3000', 'https://seu-dominio.com'],
  // ‚Üë Dom√≠nios permitidos precisa incluir seu frontend
}));
3. URL incorreta no fetch
typescript
// No frontend, o fetch pode estar com URL errada
fetch('/api/rides-simple/create') // ‚Üê Pode ser relativo ou absoluto
4. Timeout ou rede lenta
Railway pode estar com instabilidade

Conex√£o muito lenta

üõ†Ô∏è SOLU√á√ïES IMEDIATAS:
Passo 1: Verifique se o backend est√° online
Abra no navegador:

text
https://link-amzapp-production.up.railway.app/api/health
Se n√£o responder: Backend est√° offline

Passo 2: Verifique os logs do backend
bash
# No Railway dashboard:
railway logs

# Ou adicione logging no c√≥digo:
console.log('‚úÖ Backend iniciado na porta', PORT);
Passo 3: Teste a API manualmente
Abra o Console do navegador e execute:

javascript
// Teste manual da API
fetch('https://link-amzapp-production.up.railway.app/api/health')
  .then(response => response.json())
  .then(data => console.log('Health check:', data))
  .catch(error => console.error('Erro:', error));
Passo 4: Verifique CORS
No backend, ajuste o CORS:

typescript
app.use(
  cors({
    origin: [
      "https://link-aturismomoz.com",
      "https://www.link-aturismomoz.com", 
      "https://link-amzapp-production.up.railway.app",
      "http://localhost:3000",
      "http://localhost:5000", 
      "http://localhost:8000",
      // ‚Üë Adicione TODOS os dom√≠nios do frontend
    ],
    credentials: true,
  })
);
üîß Como Diagnosticar no Navegador:
1. Abra DevTools (F12) ‚Üí Network tab
2. Tente publicar uma viagem
3. Veja a requisi√ß√£o POST:
üî¥ Vermelho = Erro de conex√£o

üü° Amarelo = CORS error

üîµ Azul = Sucesso mas com status de erro

4. Clique na requisi√ß√£o falha e veja:
Status: 404, 500, CORS error?

Headers: URL est√° correta?

Response: O que o backend retorna?

üìã Poss√≠veis Cen√°rios:
Cen√°rio 1: Backend Offline
text
Status: (failed) net::ERR_CONNECTION_REFUSED
Solu√ß√£o: Reinicie o backend no Railway
Cen√°rio 2: CORS Error
text
Status: CORS policy error
Solu√ß√£o: Configure CORS corretamente
Cen√°rio 3: 404 Not Found
text
Status: 404
Solu√ß√£o: Rota /api/rides-simple/create n√£o existe
Cen√°rio 4: 500 Internal Error
text
Status: 500  
Solu√ß√£o: Erro no c√≥digo do backend - verifique logs
üöÄ SOLU√á√ÉO COMPLETA:
1. Primeiro, teste a conex√£o b√°sica:
javascript
// No console do navegador, execute:
fetch('https://link-amzapp-production.up.railway.app/api/health')
  .then(r => r.json())
  .then(console.log)
  .catch(console.error);
2. Se funcionar, teste a rota espec√≠fica:
javascript
// Teste a rota de cria√ß√£o
fetch('https://link-amzapp-production.up.railway.app/api/rides-simple/create', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    fromAddress: "Maputo",
    toAddress: "Tofo", 
    departureDate: new Date().toISOString(),
    price: "500",
    maxPassengers: 4,
    type: "sedan"
  })
})
.then(r => r.json())
.then(console.log)
.catch(console.error);
3. Corrija a URL no frontend:
typescript
// Use URL absoluta em produ√ß√£o
const API_BASE = import.meta.env.PROD 
  ? 'https://link-amzapp-production.up.railway.app'
  : 'http://localhost:3001';

fetch(`${API_BASE}/api/rides-simple/create`, {
  // ... resto do c√≥digo
});